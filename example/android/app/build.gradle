def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '2.5'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.huawei.agconnect'
android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.getui.getuiflut_example"
        minSdkVersion 17
        targetSdkVersion 28
        manifestPlaceholders = [
                GETUI_APP_ID    : "",
                GETUI_APP_KEY   : "",
                GETUI_APP_SECRET: "",
                XIAOMI_APP_ID   : "",
                XIAOMI_APP_KEY  : "",

                MEIZU_APP_ID    : "",
                MEIZU_APP_KEY   : "",

                HUAWEI_APP_ID   : "",

                OPPO_APP_KEY   : "",
                OPPO_APP_SECRET  : "",

                VIVO_APP_ID   : "",
                VIVO_APP_KEY  : ""
        ]
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.huawei.hms:push:5.0.2.300'

   // compileOnly files("$flutterRoot/bin/cache/artifacts/engine/android-arm/flutter.jar")

}
